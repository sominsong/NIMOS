import hyperlink
from matplotlib.font_manager import json_dump
import requests
from bs4 import BeautifulSoup as bs
import json
import re

exploit_cve_data = []

def write_json(cve_id, current_description, patch_data):
    cve_dict = dict()
    cve_dict["CVE-ID"] = cve_id
    cve_dict["current_description"] = current_description
    cve_dict["patch"] = patch_data
    print(cve_dict)
    with open('exploit_result.json', 'a', encoding='utf-8') as f:
        json.dump(cve_dict, f, indent= '\t')


def get_response(url, cve_id):
    response = requests.get(url)

    if response.status_code == 200:
        html = response.text
        soup = bs(response.text, 'html')
        print(url)
        text = soup.select_one('#vulnDetailTableView > tbody > tr > td > div > div.col-lg-9.col-md-7.col-sm-12 > p')
        current_description = text.get_text()
        print(current_description)
        hyperlink_table = soup.select_one('#vulnHyperlinksPanel > table > tbody').find_all()
        patch_data = "None"
        for x in range(0, len(hyperlink_table)):
            data = hyperlink_table[x].find_all('td')
            for y in range(0, len(data)):
                hyperlink_link = data[0].get_text()
                element = data[y].find_all('span')
                for z in range(0, len(element)):
                    patch = element[z].get_text()
                    if(patch == 'Patch'):
                        patch_data = hyperlink_link
        write_json(cve_id, current_description, patch_data)
    else:
        print(url)
        print("url 연결 문제")




if __name__ == '__main__':
    with open('exploit.json', 'r') as f:
        exploit_data = json.load(f)
    for line in exploit_data:
        line = line['CVE-ID']
        for x in range(len(line)):
            target_cve_id = line[x]
            if str(target_cve_id) == "None":
                continue
            target_url = "https://nvd.nist.gov/vuln/detail/CVE-" + str(target_cve_id)
            get_response(target_url, target_cve_id)   